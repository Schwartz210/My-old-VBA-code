Function ExportDirectory()
ExportDirectory = "S:\Directory\someotherfolder\Exports"
End Function

Function MyDirectory()
MyDirectory = "S:\Directory\someotherfolder\Auto compliance\"
End Function

Function SunshinePro()
SunshinePro = "SunshinePro.xlsm"
End Function

Function ControlCenter()
ControlCenter = "Control Center.xlsm"
End Function

Function JobActivityTypeArray()
JobActivityTypeArray = "Job Activity Type Array.xlsx"
End Function

Function JobInfo()
JobInfo = "Job Info.xlsx"
End Function

Function HCPInfo()
' 06/18/15
HCPInfo = "HCP Info.xlsx"
End Function

Function Client()
' 06/12/15: Rewrote as function
Client = Workbooks(ControlCenter).Worksheets("Batch").Range("B3").Value 'Allows for a different mode for different clients. 
End Function

Function ClientNum()
'Added 01/16/15 to provide client-level flexibility
' 06/12/15: Rewrote as function
ClientNum = Application.WorksheetFunction.VLookup(Client, Workbooks(ControlCenter).Worksheets("Client").Range("A3:B50"), 2, False)
End Function

Function ClientSettings()
'Array where client settings are stored
' 06/12/15: Rewrote as function
Set ClientSettings = Workbooks(ControlCenter).Worksheets("Client").Range("A1:Z300")
End Function

Function Settings_Int(Field)
' 06/19/15
Settings_Int = Application.WorksheetFunction.HLookup(Field, Workbooks(ControlCenter).Worksheets("Client").Range("A2:ZZ3"), 2, False)
End Function

Function Settings(Field)
' 06/12/15: Created function
Settings = Application.WorksheetFunction.VLookup(Client, ClientSettings, Settings_Int(Field), False)
End Function

Function HCP_Int(Field)
' 06/18/15
HCP_Int = Application.WorksheetFunction.HLookup(Field, Workbooks(HCPInfo).Worksheets(Settings("Tab")).Range("A1:ZZ2"), 2, False)
End Function

Function HCP_Field(Class, Field)
' 06/18/15
If Class = 0 Then
    HCP_Field = ""
Else
    HCP_Field = Application.WorksheetFunction.VLookup(Class, Workbooks(HCPInfo).Worksheets(Settings("Tab")).Range("A2:ZZ10000"), HCP_Int(Field), False)
End If
End Function

Function HCP_Formula()
' 07/22/15
MyHeader = "indirect(Concatenate(ColLett(Column()),(Row()-(Row()-1))))"
HCP_Formula = "=HCP_Field(" & Class(1) & "," & MyHeader & ")"
End Function

Function Job_Int(Field)
' 07/17/15
Job_Int = Application.WorksheetFunction.HLookup(Field, Workbooks(JobInfo).Worksheets(Settings("Sheet Name")).Range("A1:ZZ2"), 2, False)
End Function

Function Job_Field(Job, Field)
' 07/17/15
Job_Field = Application.WorksheetFunction.VLookup(Job, Workbooks(JobInfo).Worksheets(Settings("Sheet Name")).Range("A2:ZZ10000"), Job_Int(Field), False)
End Function
Function Job_Formula()
' 07/22/15
MyHeader = "indirect(Concatenate(ColLett(Column()),(Row()-(Row()-1))))"
Job_Formula = "=Job_Field(" & Job(1) & "," & MyHeader & ")"
End Function

Function Something(A)
'This function looks to see if there is any character within a cell, either as text or integer.
If Application.WorksheetFunction.IsError(A) = True Then
    Something = True
ElseIf Not (Len(A) = 0) Then
    Something = True
Else
    Something = False
End If
End Function



Function bIsBookOpen(ByRef szBookName As String) As Boolean
' Rob Bovey
    On Error Resume Next
    bIsBookOpen = Not (Application.Workbooks(szBookName) Is Nothing)
End Function

Function Class(Inte)
If Inte = 1 Then
    Class = "'0'!$G2"
ElseIf Inte = 2 Then
    Class = "G2:G"
Else
    Class = "Error"
End If
End Function

Function Job(Inte)
If Inte = 1 Then
    Job = "'0'!$D2"
ElseIf Inte = 2 Then
    Job = "D2:D"
ElseIf Inte = 3 Then
    Job = "'0'!D" & ActiveCell.row
Else
    Job = "Error"
End If
End Function

Function Buckets(Memo) As String
'This function looks for specific search terms and returns specific buckets which gets incorporated in the funtion SuperBucket
'Results from this fuction
'Avi Schwartz - Installed 11/04/14
' 04/13/15: Rewrote Searchterm and Bucket value assignments in a loop
''VARIABLE DECLARATION''
Dim Searchterm(1 To 25) As String
Dim Bucket(1 To 25) As String
Dim Counter As Integer

''VALUE ASSIGNMENT''
Counter = 1

''INSTRUCTIONS''
Do
Searchterm(Counter) = Workbooks(ControlCenter).Worksheets("Bucket").Range("A" & Counter + 1).Value
Bucket(Counter) = Workbooks(ControlCenter).Worksheets("Bucket").Range(ClientNum & Counter + 1).Value
Counter = Counter + 1
Loop Until Counter = 26

If InStr(Memo, Searchterm(1)) > 0 Then 'If statements scanning for keywords and returning buckets
    Buckets = Bucket(1)
ElseIf InStr(Memo, Searchterm(2)) > 0 Then
    Buckets = Bucket(2)
ElseIf InStr(Memo, Searchterm(3)) > 0 Then
    Buckets = Bucket(3)
ElseIf InStr(Memo, Searchterm(4)) > 0 Then
    Buckets = Bucket(4)
ElseIf InStr(Memo, Searchterm(5)) > 0 Then
    Buckets = Bucket(5)
ElseIf InStr(Memo, Searchterm(6)) > 0 Then
    Buckets = Bucket(6)
ElseIf InStr(Memo, Searchterm(7)) > 0 Then
    Buckets = Bucket(7)
ElseIf InStr(Memo, Searchterm(8)) > 0 Then
    Buckets = Bucket(8)
ElseIf InStr(Memo, Searchterm(9)) > 0 Then
    Buckets = Bucket(9)
ElseIf InStr(Memo, Searchterm(10)) > 0 Then
    Buckets = Bucket(10)
ElseIf InStr(Memo, Searchterm(11)) > 0 Then
    Buckets = Bucket(11)
ElseIf InStr(Memo, Searchterm(12)) > 0 Then
    Buckets = Bucket(12)
ElseIf InStr(Memo, Searchterm(13)) > 0 Then
    Buckets = Bucket(13)
ElseIf InStr(Memo, Searchterm(14)) > 0 Then
    Buckets = Bucket(14)
ElseIf InStr(Memo, Searchterm(15)) > 0 Then
    Buckets = Bucket(15)
ElseIf InStr(Memo, Searchterm(16)) > 0 Then
    Buckets = Bucket(16)
ElseIf InStr(Memo, Searchterm(17)) > 0 Then
    Buckets = Bucket(17)
ElseIf InStr(Memo, Searchterm(18)) > 0 Then
    Buckets = Bucket(18)
ElseIf InStr(Memo, Searchterm(19)) > 0 Then
    Buckets = Bucket(19)
ElseIf InStr(Memo, Searchterm(20)) > 0 Then
    Buckets = Bucket(20)
ElseIf InStr(Memo, Searchterm(21)) > 0 Then
    Buckets = Bucket(21)
ElseIf InStr(Memo, Searchterm(22)) > 0 Then
    Buckets = Bucket(22)
ElseIf InStr(Memo, Searchterm(23)) > 0 Then
    Buckets = Bucket(23)
ElseIf InStr(Memo, Searchterm(24)) > 0 Then
    Buckets = Bucket(24)
ElseIf InStr(Memo, Searchterm(25)) > 0 Then
    Buckets = Bucket(25)
Else: Buckets = "No magic word"
End If
End Function


Function Prefix(Job)
'This function determines if program is a speaker program or ad board, based on array data, then returns a result which gets incorporated in the funtion SuperBucket
'Avi Schwartz - Writted 11/04/14

Dim PreSet As String 'Added 01/16/15 to provide client-level flexibility
PreSet = Settings("Prefix")

If PreSet = "No" Then
Prefix = ""
Else
Prefix = Application.WorksheetFunction.VLookup(Job, Workbooks(JobActivityTypeArray).Worksheets("Job Activity Type Array").Range("$A$1:$C$300"), 3, False)
End If
End Function


Function Suffix(Memo)
'This function determiens if the recipient is a speaker or attendee, then returns a result which gets incorporated in the funtion SuperBucket
'Avi Schwartz - Writted and installed 11/04/14

Dim SufSet As String 'Added 01/16/15 to provide client-level flexibility
SufSet = Settings("Suffix")

If SufSet = "No" Then
    Suffix = ""
ElseIf InStr(Memo, "Speaker") Then
    Suffix = "(Speaker)"
Else
    Suffix = "(Attendee)"
End If
End Function


Function SuperBucket(Memo, Job)
'This functions concatenates results from functions Prefix, Buckets, and Suffix (if applicable)
'The output is the "expense / payment purpose" on the client template
'Avi Schwartz - Written and installed 11/04/14

If Buckets(Memo) = "Meal" Then
    SuperBucket = Prefix(Job) & Buckets(Memo) & " " & Suffix(Memo)
ElseIf Buckets(Memo) = "Rental/Facility Fee" Then 'This line was added to fix a nomenclature issue. 02/13/15
    SuperBucket = Buckets(Memo)
Else
    SuperBucket = Prefix(Job) & Buckets(Memo)
End If
End Function
Function SuperBucketDiagnostic(Job)
If Something(Prefix(Job)) Then
    SuperBucketDiagnostic = Prefix(Job)
End If
End Function

Function ColonCount(Job)
'This is kind of a wierd one. Basically for a spedic job most of the time charges get booked to individual programs (-01,-02, and etc), but sometimes--
'they get booked to the main job. This screws up the whirly gig that determines the short job code, which is linked to other stuff. This corrects it.
'Sorry if I am speaking in riddles. Just figure it out.
'Used in tab "1", Column E.
'Added on 02/05/15
ColonCount = Len(Job) - Len(Replace(Job, ":", ""))
End Function

Function GL_Diagnostic(F)
'This function is a diagnostic tool for the human running the program. These outputs don't get passed along to the final results.
'This function just determines which general ledger the charge belongs to.
'Added on 02/11/15
If InStr(F, "Fee For Service") > 0 Then
    GL_Diagnostic = "Fee For Service"
ElseIf InStr(F, "Ground") > 0 Then
    GL_Diagnostic = "Ground"
ElseIf InStr(F, "Per Diem") > 0 Then
    GL_Diagnostic = "Per Diem"
ElseIf InStr(F, "Food & Beverage") > 0 Then
    GL_Diagnostic = "Food & Beverage"
ElseIf InStr(F, "Airfare") > 0 Then
    GL_Diagnostic = "Airfare"
ElseIf InStr(F, "TrvlMgmtFee") > 0 Then
    GL_Diagnostic = "TrvlMgmtFee"
ElseIf InStr(F, "AudioVisual") > 0 Then
    GL_Diagnostic = "AudioVisual"
ElseIf InStr(F, "Room Rental") > 0 Then
    GL_Diagnostic = "Room Rental"
ElseIf InStr(F, "Lodging") > 0 Then
    GL_Diagnostic = "Lodging"
Else: GL_Diagnostic = "No magic word"
End If
End Function


Function ParticipationType(Memo)
' Simple text converter
' 04/10/15: Created
If InStr(Memo, "Ate Meal") > 0 Then
    ParticipationType = "Ate Meal"
ElseIf InStr(Memo, "No Show") > 0 Then
    ParticipationType = "No Show"
ElseIf InStr(Memo, "Opt Out") > 0 Then
    ParticipationType = "Opt Out"
Else: ParticipationType = ""
End If
End Function
